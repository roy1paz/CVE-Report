import requests
import pandas as pd
from urllib.parse import urljoin
from requests.auth import HTTPBasicAuth

from config.config import *


class OpenCVEAPI:
    def __init__(self):
        self.base_url = OPENCVE_API_URL
        self.username = OPENCVE_USERNAME
        self.password = OPENCVE_PASSWORD

    def get_cve_details(self, cve_id):
        """
        Get CVE details from OpenCVE API
        """
        try:
            url = urljoin(self.base_url, cve_id)
            response = requests.get(
                url, auth=HTTPBasicAuth(self.username, self.password), timeout=TIMEOUT
            )
            if response.status_code == 200:
                return response.json()
            else:
                return None
        except requests.exceptions.RequestException as e:
            LOGGER.exception(f"Failed to get OpenCVE description for {cve_id}: \n{e}")

    def get_cve_info(self, cve_details_df):
        cve_desc = []
        unique_cve = cve_details_df[CVE_ID].unique().tolist()
        for cve_id in unique_cve:
            if cve_id[:4] == "GHSA":
                continue
            else:
                response_desc = self.get_cve_details(cve_id)
                if response_desc:
                    cve_desc.append(response_desc)

        return pd.DataFrame(cve_desc)
