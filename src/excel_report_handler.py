import pandas as pd
import openpyxl
from openpyxl.styles import Border, Side, Font

from config.config import *


class ExcelReportHandler:
    def __init__(self, report_path):
        self.report_path = report_path

    def apply_formatting(self):
        """
        Apply borders to all cells and remove bold font to non headers in the Excel file.
        """
        workbook = openpyxl.load_workbook(self.report_path)
        thin_border = Border(
            left=Side(style="thin"),
            right=Side(style="thin"),
            top=Side(style="thin"),
            bottom=Side(style="thin"),
        )
        for sheet in workbook.worksheets:
            for row in sheet.iter_rows():
                for cell in row:
                    cell.border = thin_border
                    if cell.row != 1:
                        cell.font = Font(bold=False)
        return workbook

    def report_to_excel(self, results):
        """
        Write the analysis results to an Excel file.
        """
        try:
            with pd.ExcelWriter(self.report_path, engine="openpyxl") as writer:
                results[TOTAL_VULN].to_excel(
                    writer, sheet_name="1.Total Vulnerabilities", index=False
                )
                results[UNIQUE_VULN].to_excel(
                    writer, sheet_name="2.Total Unique Vulnerabilities", index=False
                )
                results[VULN_BY_BASE].to_excel(
                    writer, sheet_name="3.Vulnerabilities by BaseImage"
                )
                results[VULN_BY_IMAGE_SEVERITY].to_excel(
                    writer, sheet_name="4.Unique vulns Image&Severity"
                )
                results[PRODUCTS_FIX_VERSIONS].to_excel(
                    writer, sheet_name="5.Product Fix Versions"
                )
                results[VULN_BY_PRODUCT_BASE].to_excel(
                    writer, sheet_name="6.Vulns by Product&BaseImage"
                )
                results[PRIORITY_SCORE].to_excel(
                    writer, sheet_name="7.Priority Scores", index=False
                )
                results[CVE_DESC].to_excel(
                    writer, sheet_name="8.CVE Description", index=False
                )

            workbook = self.apply_formatting()
            workbook.save(self.report_path)
        except Exception as e:
            LOGGER.exception(f"Failed to save report to CSV file with the error: \n{e}")
