import os
from dotenv import load_dotenv
import logging

load_dotenv()


ROOT_PATH = os.path.dirname(os.path.dirname(__file__))


def ensure_directory(path):
    if not os.path.exists(path):
        os.makedirs(path)


# Logger configuration
def setup_logger(dir_path, file_path):
    ensure_directory(dir_path)
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
        handlers=[logging.FileHandler(file_path)],
    )
    return logging.getLogger(__name__)


LOGS_DIR = os.path.join(ROOT_PATH, "logs")
LOG_FILE = os.path.join(LOGS_DIR, "cve_report.log")
LOGGER = setup_logger(LOGS_DIR, LOG_FILE)


# Files paths
DATA_DIR = os.path.join(ROOT_PATH, "data")
VULN_DATA_PATH = os.path.join(DATA_DIR, "vuln_data.json")
REPORTS_DIR = os.path.join(ROOT_PATH, "reports")
ensure_directory(REPORTS_DIR)
CVE_DETAILS_PATH = os.path.join(REPORTS_DIR, "CVE_Details.csv")
CVE_REPORTS_PATH = os.path.join(REPORTS_DIR, "CVE Report.xlsx")

# CSV Columns
BASE_IMAGE = "Base Image"
IMAGE_NAME = "Image Name"
PRODUCT = "Product"
CVE_ID = "CVE ID"
CVE_SEVERITY = "CVE Severity"
FIX_VERSION = "Fix Version"

# Excel Columns
TOTAL_VULN = "total_vuln"
UNIQUE_VULN = "unique_vuln"
VULN_BY_BASE = "vuln_by_base"
VULN_BY_IMAGE_SEVERITY = "vuln_by_image_severity"
PRODUCTS_FIX_VERSIONS = "products_fix_versions"
VULN_BY_PRODUCT_BASE = "vuln_by_product_base"
CVE_DESC = "cve_desc"
PRIORITY_SCORE = "Priority Score"

# OpenCVE
OPENCVE_USERNAME = os.getenv("OPENCVE_USERNAME")
OPENCVE_PASSWORD = os.getenv("OPENCVE_PASSWORD")
OPENCVE_API_URL = "https://www.opencve.io/api/cve/"
TIMEOUT = 20

# Weights
CRITICAL_WEIGHT = 10
HIGH_WEIGHT = 7
MEDIUM_WEIGHT = 5
LOW_WEIGHT = 1

# Chunk size for parsing data
CHUNK_SIZE = 1000

# Severity Levels
CRITICAL = "CRITICAL"
HIGH = "HIGH"
MEDIUM = "MEDIUM"
LOW = "LOW"
